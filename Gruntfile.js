var path = require('path');

var date = new Date();

var configure = function(grunt) {
  grunt.initConfig({

    pkg: grunt.file.readJSON('package.json'),

    //
    // system paths
    //
    paths: {
      pages: path.join(__dirname, 'pages'),
      index: __dirname,
    },

    //
    // banner
    //
    banner: {
      css: '' +
        '/*\n' +
        ' * This file has been generated by stylus\n' +
        ' */\n',
    },

    // grunt-contrib-clean
    clean: {
      pages: [
        '<%= paths.pages %>',
      ],
    },

    // grunt-contrib-copy
    copy: {
      'index-page': {
        files: [{
          cwd: 'src/',
          dest: '<%= paths.index %>/',
          src: 'index.html',
          expand: true,
          flatten: true,
        }],
      },

      'box-page': {
        files: [{
          cwd: 'src/genericBox',
          dest: '<%= paths.pages %>/',
          src: '*.html',
          expand: true,
          flatten: true,
        }],
      },
    },

    // grunt-contrib-stylus
    stylus: {
      compile: {
        options: {
          compress: false,
          paths: [
            'src',
          ],
          import: ['nib', 'nib/vendor'],
          banner: '<%= banner.css %>',
        },

        files: {
          '<%= paths.pages %>/genericBox.css': [
            'src/genericBox/*.styl',
          ],
          '<%= paths.index %>/index.css': [
            'src/*.styl',
          ]
        },
      },
    },

    // grunt-contrib-watch
    watch: {
      index: {
        files: ['src/index.html'],
        task: ['copy:index-page'],
      },

      pages: {
        files: ['src/**/*.html'],
        tasks: ['copy:box-page'],
      },

      stylus: {
        files: ['src/*.styl', 'src/**/*.styl'],
        tasks: ['stylus'],
      },
    },

  });

  // find all of the task which start with `grunt-` and load them
  require('matchdep')
    .filterDev(['grunt-*', '!grunt-cli'])
    .forEach(grunt.loadNpmTasks);

  // tasks
  grunt.registerTask(
    'default',
    'Build release',
    [
      'clean:pages',
      'stylus',
      'copy:box-page',
      'copy:index-page',
      'watch',
    ]
  );
};


// Export the configuration
module.exports = configure;
