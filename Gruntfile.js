var path = require('path');

var version = '0.1.0';
var date = new Date();

var configure = function(grunt) {
  grunt.initConfig({

    pkg: grunt.file.readJSON('package.json'),

    //
    // system paths
    //
    paths: {
      pages: path.join(__dirname, 'pages'),
      index: __dirname,
      lib: path.join(__dirname, 'lib'),
    },

    //
    // banner
    //
    banner: {
      css: '' +
        '/*\n' +
        ' * This file has been generated by stylus\n' +
        ' */\n',

      js: '' +
        '/*\n' +
        ' * Generic - jQuery Plugin\n' +
        ' *\n' +
        ' * Example and documentation at: http://danlevan.github.io/jquery.generic\n' +
        ' *\n' +
        ' * Copyright (c) 2014 Dan LE VAN\n' +
        ' *\n' +
        ' * Version: ' + version + ' (' + date.toDateString() + ')\n' +
        ' * Requires: jQuery v1.7+\n' +
        ' *' +
        ' * Licensed under the MIT license:\n' +
        ' *   https://raw.github.com/danlevan/jquery.generic/master/LICENSE\n' +
        ' */\n',
    },

    // grunt-contrib-clean
    clean: {
      pages: [
        '<%= paths.pages %>',
      ],

      lib: [
        '<%= paths.lib %>',
      ]
    },

    // grunt-contrib-concat
    concat: {
      options: {
        banner: '<%= banner.js %>',
      },

      box: {
        src: ['src/lib/genericBox.js'],
        dest: '<%= paths.lib %>/jquery.genericBox.js',
      },
    },

    // grunt-contrib-copy
    copy: {
      'index-page': {
        files: [{
          cwd: 'src/pages/',
          dest: '<%= paths.index %>/',
          src: 'index.html',
          expand: true,
          flatten: true,
        }],
      },

      'box-page': {
        files: [{
          cwd: 'src/pages/genericBox',
          dest: '<%= paths.pages %>/',
          src: '*.html',
          expand: true,
          flatten: true,
        }],
      },
    },

    // grunt-contrib-jshint
    jshint: {
      options: {
        jshintrc: true,
      },

      lib: [
        'src/lib/genericBox.js',
      ],
    },

    // grunt-contrib-stylus
    stylus: {
      compile: {
        options: {
          compress: false,
          paths: [
            'src/pages',
          ],
          import: ['nib', 'nib/vendor'],
          banner: '<%= banner.css %>',
        },

        files: {
          '<%= paths.pages %>/genericBox.css': [
            'src/pages/genericBox/*.styl',
          ],
          '<%= paths.index %>/index.css': [
            'src/pages/*.styl',
          ]
        },
      },
    },

    // grunt-contrib-uglify
    uglify: {
      options: {
        banner: '<%= banner.js %>',
      },

      box: {
        options: {
          sourceMap: true,
        },
        files: {
          '<%= paths.lib %>/jquery.genericBox.min.js': [
          'src/lib/genericBox.js', ]
        },
      }
    },

    // grunt-contrib-watch
    watch: {
      box: {
        files: ['src/lib/genericBox.js'],
        tasks: ['concat:box', 'uglify:box'],
      },

      index: {
        files: ['src/pages/index.html'],
        task: ['copy:index-page'],
      },

      pages: {
        files: ['src/pages/**/*.html'],
        tasks: ['copy:box-page'],
      },

      stylus: {
        files: ['src/pages/*.styl', 'src/pages/**/*.styl'],
        tasks: ['stylus'],
      },
    },

  });

  // find all of the task which start with `grunt-` and load them
  require('matchdep')
    .filterDev(['grunt-*', '!grunt-cli'])
    .forEach(grunt.loadNpmTasks);

  // tasks
  grunt.registerTask(
    'default',
    'Build release',
    [
      'jshint',
      'clean:pages',
      'clean:lib',
      'concat:box',
      'uglify:box',
      'stylus',
      'copy:box-page',
      'copy:index-page',
      'watch',
    ]
  );
};


// Export the configuration
module.exports = configure;
